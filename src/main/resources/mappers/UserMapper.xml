<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">

<!--登入-->
    <select id="getUserByAccountPassword" resultType="com.example.demo.entity.User">
        SELECT id,account,password,name,phone,email,is_admin,email_verified,created_time FROM user WHERE account = #{account} AND password = #{password}
    </select>

<!--判斷帳號是否重複-->
    <select id="getUserByAccount" resultType="com.example.demo.entity.User">
        SELECT account FROM user WHERE account = #{account}
    </select>

<!--新增註冊-->
    <insert id="saveUser">
        INSERT INTO user (id,account,password,name,phone,email,is_admin,email_verify_token,email_verified,email_verify_token_expire,created_time,updated_time)
        VALUES(null,#{account},#{password},#{name},#{phone},#{email},#{is_admin},#{email_verify_token},#{email_verified},#{email_verify_token_expire},now(),now())
    </insert>

<!--註冊時email驗證-->
    <select id="verifyEmail" resultType="com.example.demo.entity.User">
        SELECT * FROM user WHERE email_verify_token = #{email_verify_token}
    </select>

<!--清空註冊時token跟時間-->
    <update id="updateEmailToken">
        UPDATE user SET
        email_verified = true,
        email_verify_token = null,
        email_verify_token_expire = null,
        updated_time = NOW()
        WHERE email_verify_token = #{email_verify_token}
    </update>


<!--查詢email-->
    <select id="selectUserByEmail" resultType="com.example.demo.entity.User">
        SELECT id,account,password,name,phone,email,is_admin,created_time,updated_time FROM user WHERE email = #{email}
    </select>

<!--修改會員中心資料-->
    <update id="updateUser">
        UPDATE user
        <set>
            <if test="password !=null and password !='' ">
                password=#{password},
            </if>

            <if test="name != null and name != '' ">
                name=#{name},
            </if>

            <if test="phone != null and phone != '' ">
                phone=#{phone},
            </if>

            <if test="email != null and email != '' ">
                email=#{email},
            </if>
            updated_time = now()
        </set>
        where id= #{id}
    </update>

<!--查詢userId-->
    <select id="selectUserById" resultType="com.example.demo.entity.User">
        SELECT id,account,password,name,phone,email,is_admin FROM user WHERE id = #{id}
    </select>

    <!--寄出email-->
    <update id="sendResetPasswordEmail">
        UPDATE user
        set reset_token = #{reset_token},
        reset_token_expire = #{reset_token_expire}
        WHERE email = #{email}
    </update>

<!--基於token查詢數據庫是否過期-->
    <select id="selectTokenTime" resultType="com.example.demo.entity.User">
        SELECT * FROM user WHERE  reset_token = #{reset_token}
    </select>

<!--基於reset_token 去修改密碼 要把token跟時間清空-->
    <update id="updatePasswordResetToken">
        UPDATE user SET
        password = #{password},
        reset_token = null,
        reset_token_expire = null,
        updated_time = now()
        WHERE reset_token = #{reset_token}
    </update>
</mapper>